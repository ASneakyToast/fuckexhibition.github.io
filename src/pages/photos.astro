---
import BaseLayout from "../layouts/BaseLayout.astro";

// import ArtworkQuickview from "../components/ArtworkQuickview.astro";

import ImageData from "../components/data/fuck_exhibition-data-0410.json";
let images = ImageData["@graph"];

let exhibitionPhotos = images.filter( item => {
  return item.tag.includes( "exhibition" );
});

let primaryArtworkPhotos = images.filter( item => {
  return ( item.tag.includes( "artwork" ) && item.tag.includes( "primary image" ) );
});

let openingPhotos = images.filter( item => {
  return ( item.tag.includes( "opening reception" ) );
});

---
<BaseLayout title="F*CK | Photos">
  <section class="intro">
    <h1>Photos</h1>
    <img src="/graphics/photos-text_graphic.png" />
  </section>

  <!-- <ArtworkQuickview title="WahWWah!" /> -->

  <section id="Exhibition">
    <h2>Exhibition</h2>
    <!-- Horizontal grid of photos, 3 rows mobile, 2 tablet + -->
    <!-- Clicking on it opens in lightbox with simple text that says "Installiation view" -->

    <section class="images">
      {
        Object.keys( exhibitionPhotos ).map(( key, i ) => {
          return (
            <img src={ "/images/" + exhibitionPhotos[ key ].photo[0].filename } />
          )
        })
      }
    </section>
    <img class="right-icon" src="/graphics/right_arrow-text_graphic.png" />
  </section>

  <section id="Artwork">
    <h2>Artwork</h2>
    <!-- Each artworks photos need to be bunched together -->

    <article id="artwork-title">
      <!-- all images -->
      <!-- Ok to do it artlogic style with one card photo then multiple in lightbox -->
        <section class="images">
          {
            Object.keys( primaryArtworkPhotos ).map(( key, i ) => {
              return (
                <img src={ "/images/" + primaryArtworkPhotos[ key ].photo[0].filename } />
              )
            })
          }
        </section>
    </article>
  </section>

  <section id="Reception">
    <h2>Reception</h2>
    <!-- Clicking on it opens in lightbox with simple text that says "opening reciption image" or maybe no capitons at all -->
      <section class="images">
        {
          Object.keys( openingPhotos ).map(( key, i ) => {
            return (
              <img src={ "/images/" + openingPhotos[ key ].photo[0].filename } />
            )
          })
        }
      </section>
  </section>
</BaseLayout>

<style scoped>
  :global(.page-content)  {
    max-width: 100%;
  }
  #Exhibition {
    position: relative;
  }
  #Exhibition .images {
    height: 82vh;
    width: 100%;
    overflow-x: scroll;
    white-space: nowrap;
    margin-right: -35px;
  }
  #Exhibition .images img {
    max-height: 80vh;
    margin-right: 16px;
  }
  #Exhibition .images img:hover {
    cursor: pointer;
  }

  @keyframes arrowmove {
    0% {
      right: 32px;
    }
    100% {
      right: 24px;
    }
  }
  #Exhibition .right-icon {
    width: 64px;
    position: absolute;
    right: 32px;
    bottom: 32px;

    animation-name: arrowmove;
    animation-duration: 2s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: ease;
  }
  #Exhibition .right-icon:hover {
    right: 24px;
  }
  /*
  #Exhibition .images {
    height: 52vh;
    width: 100%;

    display: grid;
    grid-auto-flow: column;
    grid-template-rows: 50% 50%;
    gap: 16px;

    overflow-x: scroll;
    white-space: nowrap;
  }
  #Exhibition .images img {
    max-height: 100%;
  }
  */

  #Artwork .images {
    /*
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 24px;
    column-gap: 16px;
    row-gap: 32px;
    justify-items: center;
     */
    text-align: center;
  }
  #Artwork .images img {
    display: inline-block;
    max-width: 200px;
    max-height: 80vh;
    padding: 0 16px 16px 0;
  }
  #Artwork .images img:hover {
    cursor: pointer;
  }

  #Reception .images {
    columns: 3;
    gap: 8px;
  }
  #Reception .images img {
    max-width: 100%;
  }
  #Reception .images img:hover {
    cursor: pointer;
  }

</style>

<script>
  import ImageData from "../components/data/fuck_exhibition-data-0410.json";
  let images = ImageData["@graph"];

  /* ARTWORK QUICKVIEW OPEN */
  function openArtworkQuickview( srcElement ) {

    const artworkData = images.find( image => {
      return srcElement.target.attributes.src.value.includes( image.title );
    });
    
    let artworkName = artworkData.tag.filter( tag => {
      return ![ "artwork", "auto erotica", "chrissa", "primary image" ].includes( tag );
    });

    let artistName = artworkData.tag.filter( tag => {
      return ![ "artwork", "primary image", "safeword", "superfam", "fliers", "drummer", "flowers bloom" ].includes( tag );
    });

    var artworkSrc = String.raw`${ artworkData.photo[0].filename }`;
    artworkSrc = artworkSrc.replace(/\s+/g, "%20"); //format string to change whitespaces

    const artworkQuickviewElement = document.createElement( "div" );
    artworkQuickviewElement.classList.add( "artwork-quickview" );
    artworkQuickviewElement.innerHTML = `
      <img class="primary-image" src=${ "/images/" + artworkSrc } />
      <aside>
        <h4>${ artistName }</h4>
        <h3>${ artworkName }</h3>
      </aside>
    `;
    artworkQuickviewElement.addEventListener( "click", () => {
      artworkQuickviewElement.remove();
    });
    document.body.appendChild( artworkQuickviewElement );
  }

  /* ARTWORK QUICKVIEW ATTACH */
  const artworkQuickviewImages = document.querySelectorAll( "#Artwork .images img" );
  artworkQuickviewImages.forEach(( image ) => {
    image.addEventListener( "click", () => {
      openArtworkQuickview( event );
    });
  });

  /* RECEIPTION QUICKVIEW OPEN */
  function openReceptionQuickview( srcElement ) {

    const receptionQuickviewElement = document.createElement( "div" );
    receptionQuickviewElement.classList.add( "reception-quickview" );
    receptionQuickviewElement.innerHTML = `
      <img src=${ srcElement.target.attributes.src.value } />
      <p>Opening reception photo</p>
    `
    receptionQuickviewElement.addEventListener( "click", () => {
      receptionQuickviewElement.remove();
    });
    document.body.appendChild( receptionQuickviewElement );
  }

  /* RECEPTION QUICKVIEW ATTACH */
  const receptionQuickviewImages = document.querySelectorAll( "#Reception .images img" );
  receptionQuickviewImages.forEach(( image ) => {
    image.addEventListener( "click", () => {
      openReceptionQuickview( event );
    });
  });

  /* EXHIBITION QUICKVIEW OPEN */
  function openExhibitionQuickview( srcElement ) {

    const exhibitionQuickviewElement = document.createElement( "div" );
    exhibitionQuickviewElement.classList.add( "exhibition-quickview" );
    exhibitionQuickviewElement.innerHTML = `
      <img src=${ srcElement.target.attributes.src.value } />
      <p>Exhibition photo</p>
    `
    exhibitionQuickviewElement.addEventListener( "click", () => {
      exhibitionQuickviewElement.remove();
    });
    document.body.appendChild( exhibitionQuickviewElement );
  }

  /* EXHIBITION QUICKVIEW ATTACH */
  const exhibitionQuickviewImages = document.querySelectorAll( "#Exhibition .images img" );
  exhibitionQuickviewImages.forEach(( image ) => {
    image.addEventListener( "click", () => {
      openExhibitionQuickview( event );
    });
  });
</script>
